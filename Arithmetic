{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number is divisble by 3\n"
     ]
    }
   ],
   "source": [
    "#11 write a code that will tell whether the given number is divisible by 3 & 6\n",
    "\n",
    "num = 456\n",
    "\n",
    "if num%3 == 0 and num%6 == 0:\n",
    "    print(\"Number is divisble by 3\")\n",
    "else:\n",
    "    print(\"Number is noot divisible by 6\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "602\n"
     ]
    }
   ],
   "source": [
    "#12 code that will take three digits from the user and add the square of each digit\n",
    "num = 938\n",
    "\n",
    "dig1 = num//100\n",
    "dig2 = (num//10)%10\n",
    "dig3 = num%10\n",
    "\n",
    "square_number = dig1**2 + dig2**2 + dig3**3\n",
    "print(square_number)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number is armstrong\n"
     ]
    }
   ],
   "source": [
    "#13 code that will check the number is armstrong number is not\n",
    "#what is armstrong number? sum of 2 digits raised to the power three equals to the number itself\n",
    "#eg 371 = 3**3 + 7**3 + 1**3 = 371\n",
    "\n",
    "num = 371\n",
    "dig1 = num//100\n",
    "dig2 = (num//10)%10\n",
    "dig3 = (num%10)\n",
    "\n",
    "new_num = dig1**3 +dig2**3 + dig3**3\n",
    "\n",
    "if num == new_num:\n",
    "    print(\"The number is armstrong\")\n",
    "else:\n",
    "    print(\"The number is not armstrong\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Name**Is**James\n"
     ]
    }
   ],
   "source": [
    "#14 display three string \"Name\", \"Is\", \"James\" as \"Name**Is**James\"\n",
    "print(\"Name\", \"Is\", \"James\", sep=\"**\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14\n"
     ]
    }
   ],
   "source": [
    "#15 convert decimal to octal using print() output format\n",
    "\n",
    "number = 12\n",
    "print(oct(number)[-2:])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
